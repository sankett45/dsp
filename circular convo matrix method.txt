EXPERIMENT-7
 %Matrix method Circular Convolution 
clear all; 
close all; 
clc; 
% Input sequences 
x = input('Enter the first sequence x(n) : '); 
h = input('Enter the second sequence h(n) : '); 
% Zero-padding to make lengths equal 
N = max(length(x), length(h)); 
x = [x, zeros(1, N - length(x))]; 
h = [h, zeros(1, N - length(h))]; 
n = 0:N-1; 
%% Method 1: Built-in circular convolution 
y_builtin = cconv(x, h, N); 
%% Method 2: Matrix method 
H = zeros(N, N); 
for i = 1:N 
H(:,i) = circshift(h', i-1); 
end 
y_matrix = H * x'; % column vector 
%% Plotting 
f
 igure; 
% Input x(n) 
subplot(2,2,1); 
stem(n, x, 'filled'); 
t
 itle('Input Sequence x(n)'); 
xlabel('n'); ylabel('x[n]'); 
% Input h(n) 
subplot(2,2,2); 
stem(n, h, 'filled'); 
t
 itle('Input Sequence h(n)'); 
xlabel('n'); ylabel('h[n]'); 
% Output using built-in function 
subplot(2,2,3); 
stem(n, y_builtin, 'filled'); 
t
 itle('Circular Convolution (Built-in)'); 
xlabel('n'); ylabel('y[n]'); 
% Output using matrix method 
subplot(2,2,4); 
stem(n, y_matrix, 'filled'); 
t
 itle('Circular Convolution (Matrix Method)'); 
xlabel('n'); ylabel('y[n]');

